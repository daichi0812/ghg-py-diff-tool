--- /Users/shotaro/DevHub/CG/generalized-hybrid-grains/src/python/analysis/extractStressPlot.py
+++ /Users/shotaro/DevHub/CG/generalized-hybrid-grains/src/python/simulator/nagasu/extractStressPlot.py
@@ -28,11 +28,20 @@
         self.camera_y_pos_label = QtWidgets.QLabel("cp: ")

         self.camera_y_pos_slider = self.create_slider(QtCore.Qt.Vertical, 0, 100, 50, self.update_camera_pos)

 

+        self.plot_y_move_label = QtWidgets.QLabel("axis y: ")

+        self.plot_y_move_slider = self.create_slider(QtCore.Qt.Vertical, -10000, 5000, 0, self.update_axis_y)

+

         self.camera_x_pos_label = QtWidgets.QLabel("camera pos: ")

         self.camera_x_pos_slider = self.create_slider(QtCore.Qt.Horizontal, 0, 100, 50, self.update_camera_pos)

 

+        self.plot_x_move_label = QtWidgets.QLabel("axis x: ")

+        self.plot_x_move_slider = self.create_slider(QtCore.Qt.Horizontal, -10000, 5000, 0, self.update_axis_x)

+

         self.camera_zoom_label = QtWidgets.QLabel("camera zoom: ")

         self.camera_zoom_slider = self.create_slider(QtCore.Qt.Horizontal, 0, 100, 50, self.update_camera_pos)

+

+        self.plot_zoom_label = QtWidgets.QLabel("plot zoom: ")

+        self.plot_zoom_slider = self.create_slider(QtCore.Qt.Horizontal, 0, 100, 50, self.update_plot_zoom)

 

         self.dt_plot_label = QtWidgets.QLabel("t: ")

         self.dt_plot_slider = self.create_slider(QtCore.Qt.Horizontal, 0, 1000, 0, self.update_dt)

@@ -71,10 +80,18 @@
         camera_y_pos_box.addWidget(self.camera_y_pos_label, alignment=QtCore.Qt.Alignment())

         camera_y_pos_box.addWidget(self.camera_y_pos_slider, alignment=QtCore.Qt.Alignment())

 

+        plot_move_y_pos_box = QtWidgets.QVBoxLayout()

+        plot_move_y_pos_box.addWidget(self.plot_y_move_label, alignment=QtCore.Qt.Alignment())

+        plot_move_y_pos_box.addWidget(self.plot_y_move_slider, alignment=QtCore.Qt.Alignment())

+

         dt_plot_box = QtWidgets.QHBoxLayout()

         dt_plot_box.addWidget(self.dt_plot_label, alignment=QtCore.Qt.Alignment())

         dt_plot_box.addWidget(self.dt_plot_slider, alignment=QtCore.Qt.Alignment())

 

+        plot_move_x_pos_box = QtWidgets.QHBoxLayout()

+        plot_move_x_pos_box.addWidget(self.plot_x_move_label, alignment=QtCore.Qt.Alignment())

+        plot_move_x_pos_box.addWidget(self.plot_x_move_slider, alignment=QtCore.Qt.Alignment())

+

         plot_box = QtWidgets.QVBoxLayout()

         plot_box.addWidget(self.stress_plot_canvas, alignment=QtCore.Qt.Alignment())

         plot_box.addLayout(dt_plot_box)

@@ -89,20 +106,24 @@
 

         upper_box = QtWidgets.QHBoxLayout()

         upper_box.addLayout(plot_box)

+        upper_box.addLayout(plot_move_y_pos_box)

         upper_box.addLayout(gl_box)

         upper_box.addLayout(camera_y_pos_box)

 

         label_box = QtWidgets.QVBoxLayout()

         label_box.addWidget(self.camera_x_pos_label, alignment=QtCore.Qt.Alignment())

         label_box.addWidget(self.camera_zoom_label, alignment=QtCore.Qt.Alignment())

+        label_box.addWidget(self.plot_zoom_label, alignment=QtCore.Qt.Alignment())

 

         slider_box = QtWidgets.QVBoxLayout()

         slider_box.addWidget(self.camera_x_pos_slider, alignment=QtCore.Qt.Alignment())

         slider_box.addWidget(self.camera_zoom_slider, alignment=QtCore.Qt.Alignment())

+        slider_box.addWidget(self.plot_zoom_slider, alignment=QtCore.Qt.Alignment())

 

         slider_label_box = QtWidgets.QHBoxLayout()

         slider_label_box.addLayout(label_box)

         slider_label_box.addLayout(slider_box)

+        slider_label_box.addLayout(plot_move_x_pos_box)

 

         checkboxes = QtWidgets.QHBoxLayout()

         checkboxes.addWidget(self.grains_checkbox, alignment=QtCore.Qt.Alignment())

@@ -236,6 +257,11 @@
         zoom_level = math.pow(2.0, (self.camera_zoom_slider.value() - 50.0) * side_mag_level / 50.0)

         self.gl.set_view_info(x_pos, y_pos, zoom_level)

 

+    def update_plot_zoom(self):

+        side_mag_level = 5  # 2^5 = 32x magnification

+        zoom_level = math.pow(2.0, (self.plot_zoom_slider.value() - 50.0) * side_mag_level / 50.0)

+        self.stress_plot_canvas.set_zoom_plot(zoom_level)

+

     def check_box_changed(self):

         self.gl.toggle_draw(self.grains_checkbox.isChecked(), self.selected_cell_checkbox.isChecked(),

                             self.grid_checkbox.isChecked())

@@ -269,13 +295,13 @@
         # self.scene_fn = "Save/serialized_forces.h5"

 

         # プロット用応力データ

-        stress_fn = "simulated_data/11/compressed_stress.h5"

+        stress_fn = "Save_circle12_flow/compressed_stress.h5"

 

         # 描画用粒子データ

-        self.scene_fn = "simulated_data/11/element_data_0.500000.h5"

+        self.scene_fn = "Rolling_circle12_flow/element_data.h5"

 

         # テンプレートファイル

-        self.template_fn = "simulated_data/11/square_merge_template.h5"

+        self.template_fn = "Save_circle12_flow/circle12_flow_template.h5"

 

         self.all_stress_pair_data.load(stress_fn)

         self.stress_plot_canvas.set_all_stress_pair_data(self.all_stress_pair_data)

@@ -284,6 +310,15 @@
         self.init_dt_slider()

         self.set_plot_mode_label()

 

+    def update_axis_x(self):

+        self.x_move = float(self.plot_x_move_slider.value())

+        self.stress_plot_canvas.set_move_plot_range_x(self.x_move)

+

+    def update_axis_y(self):

+        self.y_move = float(self.plot_y_move_slider.value())

+        self.stress_plot_canvas.set_move_plot_range_y(self.y_move)

+

+

     def plot_per_timestep(self):

         self.stress_plot_canvas.plot_data_per_timestep()

         self.set_plot_mode_label()
